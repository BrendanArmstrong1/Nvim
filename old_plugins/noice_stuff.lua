return {

  -- better `vim.notify()`
  -- {
  --   "rcarriga/nvim-notify",
  --   keys = {
  --     {
  --       "<leader>nn",
  --       function()
  --         require("notify").dismiss({ silent = true, pending = true })
  --       end,
  --       desc = "delete all notifications",
  --     },
  --   },
  --   opts = {
  --     timeout = 3000,
  --     max_height = function()
  --       return math.floor(vim.o.lines * 0.75)
  --     end,
  --     max_width = function()
  --       return math.floor(vim.o.columns * 0.75)
  --     end,
  --   },
  --   init = function()
  --     -- when noice is not enabled, install notify on verylazy
  --     local util = require("util")
  --     if not util.has("noice.nvim") then
  --       util.on_very_lazy(function()
  --         vim.notify = require("notify")
  --       end)
  --     end
  --   end,
  -- },

  -- noicer ui
  -- {
  --   "folke/noice.nvim",
  --   event = "VeryLazy",
  --   dependencies = {
  --     -- which key integration
  --     {
  --       -- "folke/which-key.nvim",
  --       "MunifTanjim/nui.nvim",
  --       "rcarriga/nvim-notify",
  --     },
  --   },
  --   opts = {
  --     messages = {
  --       -- NOTE: If you enable messages, then the cmdline is enabled automatically.
  --       -- This is a current Neovim limitation.
  --       enabled = false, -- enables the Noice messages UI
  --       view = "cmdline", -- default view for messages
  --       view_error = "notify", -- view for errors
  --       view_warn = "mini", -- view for warnings
  --       view_history = "messages", -- view for :messages
  --       view_search = "virtualtext", -- view for search count messages. Set to `false` to disable
  --     },
  --     lsp = {
  --       progress = {
  --         enabled = false, -- messes with my autocmd scripts for closing buffers
  --       },
  --       override = {
  --         ["vim.lsp.util.convert_input_to_markdown_lines"] = true,
  --         ["vim.lsp.util.stylize_markdown"] = true,
  --         ["cmp.entry.get_documentation"] = true,
  --       },
  --     },
  --     presets = {
  --       bottom_search = false,
  --       command_palette = true,
  --       long_message_to_split = true,
  --       inc_rename = true,
  --     },
  --   },
  --   -- stylua: ignore
  --   keys = {
  --     { "<S-Enter>", function() require("noice").redirect(vim.fn.getcmdline()) end, mode = "c", desc = "Redirect Cmdline" },
  --     { "<leader>nl", function() require("noice").cmd("last") end, desc = "Noice Last Message" },
  --     { "<leader>nh", function() require("noice").cmd("history") end, desc = "Noice History" },
  --     { "<leader>na", function() require("noice").cmd("all") end, desc = "Noice All" },
  --     { "<leader>nd", function() require("noice").cmd("dismiss") end, desc = "Dismiss All" },
  --     { "<c-f>", function() if not require("noice.lsp").scroll(4) then return "<c-f>" end end, silent = true, expr = true, desc = "Scroll forward", mode = {"i", "n", "s"} },
  --     { "<c-b>", function() if not require("noice.lsp").scroll(-4) then return "<c-b>" end end, silent = true, expr = true, desc = "Scroll backward", mode = {"i", "n", "s"}},
  --   },
  -- },
}
